/* eslint-disable */
export default async () => {
    const t = {
        ["./common/enums/role.enum"]: await import("./common/enums/role.enum"),
        ["./modules/user/dto/user.dto"]: await import("./modules/user/dto/user.dto"),
        ["./modules/user/entities/user.entity"]: await import("./modules/user/entities/user.entity"),
        ["./common/dto/success.dto"]: await import("./common/dto/success.dto"),
        ["./modules/auth/dto/auth.dto"]: await import("./modules/auth/dto/auth.dto"),
        ["./modules/auth/dto/token.dto"]: await import("./modules/auth/dto/token.dto"),
        ["./modules/prompt/dto/prompt.dto"]: await import("./modules/prompt/dto/prompt.dto")
    };
    return { "@nestjs/swagger": { "models": [[import("./modules/user/dto/create-update-user.dto"), { "CreateUpdateUserDto": { firstName: { required: true, type: () => String, maxLength: 50 }, lastName: { required: true, type: () => String, maxLength: 50 }, email: { required: true, type: () => String }, role: { required: true, enum: t["./common/enums/role.enum"].Role }, isActive: { required: false, type: () => Boolean } } }], [import("./modules/user/dto/reset-password.dto"), { "ResetPasswordDto": { password: { required: true, type: () => String, minLength: 8 } } }], [import("./common/dto/base.dto"), { "BaseDto": { id: { required: true, type: () => String }, createdAt: { required: true, type: () => Date }, updatedAt: { required: true, type: () => Date } } }], [import("./modules/user/dto/user.dto"), { "UserDto": { firstName: { required: true, type: () => String }, lastName: { required: true, type: () => String }, email: { required: true, type: () => String }, emailVerified: { required: true, type: () => Boolean }, isActive: { required: true, type: () => Boolean }, fullName: { required: true, type: () => String } } }], [import("./common/dto/success.dto"), { "SuccessDto": { success: { required: true, type: () => Boolean }, message: { required: false, type: () => String } } }], [import("./modules/auth/dto/auth.dto"), { "AuthDto": { user: { required: true, type: () => t["./modules/user/dto/user.dto"].UserDto }, accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String }, expiresAt: { required: true, type: () => Number } } }], [import("./modules/auth/dto/sign-in.dto"), { "SignInDto": { email: { required: true, type: () => String }, password: { required: true, type: () => String } } }], [import("./modules/auth/dto/sign-up.dto"), { "SignUpDto": { firstName: { required: true, type: () => String, maxLength: 50 }, lastName: { required: true, type: () => String, maxLength: 50 }, email: { required: true, type: () => String }, password: { required: true, type: () => String, minLength: 8 } } }], [import("./modules/auth/dto/token.dto"), { "TokenDto": { accessToken: { required: true, type: () => String }, refreshToken: { required: true, type: () => String }, expiresAt: { required: true, type: () => Number } } }], [import("./modules/auth/dto/refresh-token.dto"), { "RefreshTokenDto": { token: { required: true, type: () => String } } }], [import("./modules/prompt/dto/create-update-prompt.dto"), { "CreateUpdatePromptDto": { title: { required: true, type: () => String, maxLength: 500 }, description: { required: true, type: () => String } } }], [import("./modules/prompt/dto/prompt.dto"), { "PromptDto": { title: { required: true, type: () => String }, description: { required: true, type: () => String }, createdBy: { required: true, type: () => String }, createdById: { required: true, type: () => String }, likesCount: { required: true, type: () => Number }, isFavorite: { required: true, type: () => Boolean } } }]], "controllers": [[import("./modules/user/user.controller"), { "UserController": { "getMany": {}, "getOne": { type: t["./modules/user/entities/user.entity"].User }, "create": { type: t["./modules/user/entities/user.entity"].User }, "update": { type: t["./modules/user/entities/user.entity"].User }, "delete": { type: Object }, "resetPassword": { type: t["./modules/user/entities/user.entity"].User } } }], [import("./modules/auth/auth.controller"), { "AuthController": { "signUp": { type: t["./common/dto/success.dto"].SuccessDto }, "signIn": { type: t["./modules/auth/dto/auth.dto"].AuthDto }, "refreshToken": { type: t["./modules/auth/dto/token.dto"].TokenDto } } }], [import("./modules/prompt/prompt.controller"), { "PromptController": { "getMany": {}, "getOne": { type: t["./modules/prompt/dto/prompt.dto"].PromptDto }, "create": { type: t["./modules/prompt/dto/prompt.dto"].PromptDto }, "update": { type: t["./modules/prompt/dto/prompt.dto"].PromptDto }, "delete": { type: Object }, "markAsFavorite": { type: t["./common/dto/success.dto"].SuccessDto }, "removeFromFavorite": { type: t["./common/dto/success.dto"].SuccessDto } } }]] } };
};